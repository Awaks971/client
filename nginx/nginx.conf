# It's a minimal nginx configuration provided to simplify example.
# Don't use directly in production.

user nginx nginx;

events {
}

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile      on;

  keepalive_timeout 300s;

  # HTTPS
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 24h;
  ssl_session_tickets off;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1.2;
  ssl_ciphers EECDH+CHACHA20:EECDH+AES;
  ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;

  ssl_certificate /etc/letsencrypt/live/360.awaks.fr/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/360.awaks.fr/privkey.pem;


# Redirect HTTP non-www to HTTPS non-www
  server {
    listen 80;

    server_name 360.awaks.fr;

    # Serve create react app build
    location / {
      root /var/www/awaks/;
      try_files $uri $uri/ /index.html;
    }

    return 301 https://360.awaks.fr$request_uri;
  }
  

  # Main domain
  server {
    listen 443 ssl;

    server_name 360.awaks.fr;

    # Serve create react app build
    location / {
      root /var/www/awaks/;
      try_files $uri $uri/ /index.html;
    }



    location /api {
            proxy_pass http://server:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
    location /graphql {
            proxy_pass http://server:8080/graphql;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $remote_addr;
        }

    # Certbot
    location /.well-known/ {
      root /var/lib/certbot;
    }
  }
}